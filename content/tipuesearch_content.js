var tipuesearch = {"pages": [{'title': 'About', 'text': '課程名稱: 協同產品設計實習 - Collaborative Product Design Practice \n 學員作業網站:  \xa0 https://mdecd2025.github.io/hw-RAY41223215/ \n 學員作業倉儲: https://github.com/mdecd2025/hw-RAY41223215 \n \n \n 課程代號: cd2025 \n Teams 線上教學: \n 以 "學號@nfu.edu.tw" 登入 \xa0 https://login.microsoftonline.com/ \xa0 Office 365 \n Teams 團隊代碼:\xa0 p5z4eku \n \n 課程評分: \n Homework (30%) - 每週至少提交兩次與課程進度有關的內容, 完成後填回自評表單 \n Exam (40%) - 建立包含操作流程影片、心得以及提供檔案下載的網頁後填回自評表單 \n Final Report (30%) - 利用網頁內容進行簡報並提交 pdf 格式書面報告, 完成後填回自評表單 \n', 'tags': '', 'url': 'About.html'}, {'title': 'list', 'text': 'from browser import html, document, ajax\n\n# 設定學員資料的 URL\nurl = "https://mde.tw/list/2b.txt"\n\n# 定義載入資料的回呼函式\ndef on_data(response):\n    if response.status != 200:\n        print("資料載入失敗，請檢查網絡或 URL 是否正確")\n        return\n    \n    data = response.text.strip().splitlines()\n    if not data or len(data) < 2:\n        print("學員資料格式異常，請檢查來源文件")\n        return\n\n    all_stud = data[1:]  # 跳過標題行\n    print(f"總共有 {len(all_stud)} 名學員")\n\n    # 取得網頁中的 brython_div1\n    brython_div1 = document["brython_div1"]\n    brython_div1.clear()\n    \n    # 插入標題\n    title = html.H3("學員 GitHub 作業列表", Class="title")\n    brython_div1 <= title\n    \n    # 建立無序清單\n    ul = html.UL(Class="student-list")\n    \n    for i, student in enumerate(all_stud, 1):\n        student_data = student.split(None, 1)  # 只分割一次，確保學號和 GitHub 帳號正確\n        if len(student_data) < 2:\n            continue\n\n        student_id, github_account = student_data  # 取得學號 和 GitHub 帳號\n        \n        # 創建學號的超連結，指向 GitHub Repo\n        student_link = html.A(student_id, href=f"https://github.com/mdecd2025/hw-{github_account}", target="_blank", Class="student-id-link")\n\n        # 創建 repo 的超連結，指向 GitHub.io\n        repo_link = html.A("repo", href=f"https://mdecd2025.github.io/hw-{github_account}", target="_blank", Class="repo-link")\n\n        # 建立列表項目，格式為 學號 (repo)\n        list_item = html.LI()\n        list_item <= student_link  # 超連結學號\n        list_item <= " ("  # 在學號和 repo 之間加上括號\n        list_item <= repo_link  # 超連結 repo\n        list_item <= ")"  # 關閉括號\n\n        ul <= list_item  # 加入清單\n    \n    brython_div1 <= ul\n\n# 發送 AJAX 請求\nrequest = ajax.ajax()\nrequest.bind(\'complete\', on_data)\nrequest.open(\'GET\', url, True)\nrequest.send()\n\n# 加入 CSS 樣式\nstyle = html.STYLE("""\n    .title {\n        font-size: 24px;\n        font-weight: bold;\n        text-align: center;\n        margin-bottom: 15px;\n    }\n    .student-list {\n        list-style-type: none;\n        padding: 0;\n        text-align: center;\n    }\n    .student-list li {\n        font-size: 18px;\n        margin: 5px 0;\n    }\n    .student-id-link {\n        color: #0366d6;\n        text-decoration: none;\n        font-weight: bold;\n    }\n    .student-id-link:hover {\n        text-decoration: underline;\n    }\n    .repo-link {\n        color: #28a745;\n        text-decoration: none;\n        font-weight: bold;\n    }\n    .repo-link:hover {\n        text-decoration: underline;\n    }\n""")\ndocument <= style \n 全部學員的作業網址 \n from browser import html, document, ajax\n\n# 設定學員資料的 URL\nurl = "https://mde.tw/list/2b.txt"\n\n# 定義載入資料的回呼函式\ndef on_data(response):\n    if response.status != 200:\n        print("資料載入失敗，請檢查網絡或 URL 是否正確")\n        return\n    \n    data = response.text.strip().splitlines()\n    if not data or len(data) < 2:\n        print("學員資料格式異常，請檢查來源文件")\n        return\n\n    all_stud = data[1:]  # 跳過標題行\n    print(f"總共有 {len(all_stud)} 名學員")\n\n    # 要顯示的學號列表\n    target_ids = ["41223206", "41223215", "41223226", "41223227", "41223228", "41223235"]\n\n    # 取得網頁中的 brython_div1\n    brython_div1 = document["brython_div1"]\n    brython_div1.clear()\n    \n    # 插入標題\n    title = html.H3("學員 GitHub 作業列表", Class="title")\n    brython_div1 <= title\n    \n    # 建立無序清單\n    ul = html.UL(Class="student-list")\n    \n    for student in all_stud:\n        student_data = student.split(None, 1)  # 只分割一次，確保學號和 GitHub 帳號正確\n        if len(student_data) < 2:\n            continue\n\n        student_id, github_account = student_data  # 取得學號 和 GitHub 帳號\n        \n        # 只顯示目標學號\n        if student_id not in target_ids:\n            continue\n        \n        # 創建學號的超連結，指向 GitHub Repo\n        student_link = html.A(student_id, href=f"https://github.com/mdecd2025/hw-{github_account}", target="_blank", Class="student-id-link")\n\n        # 創建 repo 的超連結，指向 GitHub.io\n        repo_link = html.A("repo", href=f"https://mdecd2025.github.io/hw-{github_account}", target="_blank", Class="repo-link")\n\n        # 建立列表項目，格式為 學號 (repo)\n        list_item = html.LI()\n        list_item <= student_link  # 超連結學號\n        list_item <= " ("  # 在學號和 repo 之間加上括號\n        list_item <= repo_link  # 超連結 repo\n        list_item <= ")"  # 關閉括號\n\n        ul <= list_item  # 加入清單\n    \n    brython_div1 <= ul\n\n# 發送 AJAX 請求\nrequest = ajax.ajax()\nrequest.bind(\'complete\', on_data)\nrequest.open(\'GET\', url, True)\nrequest.send()\n\n# 加入 CSS 樣式\nstyle = html.STYLE("""\n    .title {\n        font-size: 24px;\n        font-weight: bold;\n        text-align: center;\n        margin-bottom: 15px;\n    }\n    .student-list {\n        list-style-type: none;\n        padding: 0;\n        text-align: center;\n    }\n    .student-list li {\n        font-size: 18px;\n        margin: 5px 0;\n    }\n    .student-id-link {\n        color: #0366d6;\n        text-decoration: none;\n        font-weight: bold;\n    }\n    .student-id-link:hover {\n        text-decoration: underline;\n    }\n    .repo-link {\n        color: #28a745;\n        text-decoration: none;\n        font-weight: bold;\n    }\n    .repo-link:hover {\n        text-decoration: underline;\n    }\n""")\ndocument <= style \n \n 組員連結 \n \n 製作影片 \n ipv6製作影片 \n # 學員編號列表 (您提供的編號)\nstudent_numbers = [\n    "40923137", "41023114", "41023205", "41023206", "41023210", "41023213", "41023215", "41023216",\n    "41023218", "41023232", "41023237", "41071202", "41071203", "41071204", "41223201", "41223202",\n    "41223203", "41223205", "41223206", "41223207", "41223208", "41223209", "41223210", "41223211",\n    "41223212", "41223214", "41223215", "41223216", "41223217", "41223218", "41223219", "41223220",\n    "41223221", "41223222", "41223223", "41223224", "41223225", "41223226", "41223227", "41223228",\n    "41223229", "41223230", "41223231", "41223232", "41223233", "41223234", "41223235", "41223236",\n    "41223237", "41223239", "41223240", "41223242", "41223243", "41223244", "41223245", "41223246",\n    "41223247", "41223248", "41223249", "41223250", "41223251", "41223252", "41223253", "41271217",\n    "41271236", "41271237"\n]\n\n# 使用學號生成連結\nfor i, student_id in enumerate(student_numbers, 1):  # 從 1 開始計數\n    # 格式化序號為三位數 (001-066)\n    student_num = f"{i:03d}"\n    \n    # 完整的 IPv6 位址\n    full_ip = f"{base_ip}{student_num}"  # 使用學號的最後三個數字生成IPv6地址\n    # 完整的 URL\n    url = f"http://[{full_ip}]:{port}"\n    \n    # 建立連結元素\n    link = html.A(f"{student_id}", href=url, target="_blank")  # 顯示學員的學號\n    # 每個連結後加入換行\n    div <= link\n    div <= html.BR() \n 全學員ipv6列表 \n \n', 'tags': '', 'url': 'list.html'}, {'title': 'Tasks', 'text': '', 'tags': '', 'url': 'Tasks.html'}, {'title': 'task1', 'text': 'https://youtu.be/XWijwHBjfmw \n \n \n 設定python\xa0 \n', 'tags': '', 'url': 'task1.html'}, {'title': 'task2', 'text': '模擬webot選轉測試 利用老師給的範例 一步一步照著用 成功組出2根可以連在一起的桿子 \n 作品 \xa0 <------ \n 影片連結 \xa0\\ \n \n', 'tags': '', 'url': 'task2.html'}, {'title': 'Homework', 'text': '作業 (30%) \n HW1 (5%):  建立由 Box 組成的平面四連桿機構 Webots 模擬場景 \n part1: \n 請各學員在 USB 隨身碟或個人電腦上完成 cd2025 課程所需的可攜系統配置: \n 下載  portable_wcm2025.7z  (330MB, 解開壓縮後 1.4GB) \n Webots_2025a.7z  (1.5 GB, 解開後約為 2.9GB, 可單獨運作) \n Webots_2025a_web.7z  (171 MB, 解開壓縮後約為 1GB, 必須連網運作) \n Blender4.2.7z \n part2: \n 請各學員完成可攜程式系統配置後, 利用 Webots R2025a 中寬度與高度都為 0.1m 的 box 物件建立一個簡單的平面四連桿機構模擬場景. \n base (基座) 長度 1m, link1 長度 0.4m, link2 長度 0.6m, link3 長度 0.9m, 各轉軸均為 HingeJoint, joint1 旋轉速度設定為 1radian/sec. \n part3: \n 模擬場景啟動後, 按下 s 鍵機構開始作動, 按下 p 鍵後機構暫停. \n 參考資料: \n cd2025_hw1_demo.7z \n HW2 (5%):  建立由 CAD 繪製零件組成的平面四連桿機構 Webots 模擬場景 \n 各學員請利用 CAD 系統依據 HW1 的連桿尺寸與運動方式, 配置適當大小的旋轉軸以及基座後, 利用 Webots R2025a 完成一個簡單的平面四連桿機構模擬場景. \n 參考資料: \n fourbar_slvs.7z \n HW3 (20%): 建立 Webots 桌上籃球遊戲機模擬系統 \n 請各分組利用CAD 系統建立一個能在電腦桌 (1600W X 700D X 740H mm) 上運作的投籃機構 ( 參考影片 )後, 導入 Webots R2025a 套件, 建立一個能由使用者透過鍵盤按鍵操作, 且具備計分板的籃球遊戲機模擬系統. \n 參考資料: \n 參考資料: \n fourbar_ball_throwing_linkage.slvs \n sixbar_ball_throwing_linkage.slvs \n \n', 'tags': '', 'url': 'Homework.html'}, {'title': 'HW1', 'text': 'HW1 (5%):  建立由 Box 組成的平面四連桿機構 Webots 模擬場景 \n 操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 HW1 - 學員學號 \n \n \n /downloads/123.zip \xa0連桿繪製\xa0 https://youtu.be/xX6v5inBloc \n \n webot練習影片 \xa0 \n /downloads/practice-1.7z \n \n \n https://youtu.be/aH4og_k_Luo \xa0模擬影片 \n https://youtu.be/yXgJ8hmfr7c  詳細製作影片 \n /downloads/fourbox_link_41223215.7z \xa0檔案位置 \n', 'tags': '', 'url': 'HW1.html'}, {'title': 'HW2', 'text': 'HW2 (5%):  建立由 CAD 繪製零件組成的平面四連桿機構 Webots 模擬場景 \n 操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 HW2 - 學員學號 \n \n \n \n \n \n \n \n sovlespace 連桿繪製影片 \n sovlespace 檔案 \n 連桿檔案 \n webot匯入cad檔案影片 \n ---------------------------------------------------- \n 如何將stl轉成obj檔並且拆解 \n 操作影片 \n', 'tags': '', 'url': 'HW2.html'}, {'title': 'HW3', 'text': 'HW3 (20%): 建立 Webots 桌上籃球遊戲機模擬系統 \n 操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 HW3 - 學員學號 \n \n', 'tags': '', 'url': 'HW3.html'}, {'title': 'Midterm', 'text': '本課程所繳交的期中成績為學員自評之學習期望成績. \n 期中考週的自評期望成績繳交流程: \n \n 整理先前所完成的各週的進度、作業網頁內容以及心得 \n 拍攝期中自評影片, 上傳至 Youtube 後, 以" 國立虎尾科技大學 - 機械設計工程系 - cd2025 期中自評- 學員學號 "為影片標題後嵌入本頁面中 \n 回填期中自評表單 \n 上傳學員期中成績 \n \n 各週進度:1-4周 製作全學員連結 python設定 基礎webot環境架設\xa0 \n 4-9 webot連桿練習 sovlespace連桿繪製 製作fourbox作業 \n 各週網頁內容: \n 期中心得:webot相比較上學期的coppeliasim 過程比較不直覺 建立樹狀圖的時候 要思考該特徵該放在哪\xa0 \n 製作四連桿也真的花我非常多的時間 但還是靠著老師和同學的範例成功做出 \n 期中自評影片: https://youtu.be/L8rq-KgBeBE \n \n', 'tags': '', 'url': 'Midterm.html'}, {'title': 'Exam', 'text': 'Exam1 (10%): 建立 Webots 基本物件模擬場景 \n 各學員利用 Webots R2025a 套件中的 Shape 物件, 隨堂建立指定的機電系統模擬場景, 並利用 Python 程式進行互動控制. \n Exam2 (10%): 利用 CAD 零組件建立模擬場景\xa0 \n 各學員利用 CAD (Solvespace 與 NX2312), 隨堂建立指定的系統模型零組件後, 導入 Webots R2025a 後, 建立機電系統模擬場景, 並利用 Python 程式進行互動控制. \n Exam3 (20%): Webots 機電模擬場景的協同設計 \n 各分組利用 CAD (Solvespace 與 NX2312), 隨堂建立指定的系統模型零組件後, 導入 Webots R2025a 後, 建立機電系統模擬場景, 並利用 Python 程式進行互動控制. 過程中各學員必須採同步協同模式, 維護從 Github Classroom 取得的分組協同倉儲以及網站. \n 協同分組方式: \n \n 分配學員負責利用 Solvespace 建立系統零組件, 過程中必須將所建構之零組件檔案與繪圖過程影片上傳至分組網頁. \n 分配學員負責利用 NX2312 建立系統零組件, 過程中必須將所建構之零組件檔案與繪圖過程影片上傳至分組網頁. \n 分配學員負責利用 Webots 建立機電系統模擬場景, 並利用 Python 程式進行控制, 過程中必須將建構過程拍成帶有說明字幕的影片上傳至分組網頁. \n \n', 'tags': '', 'url': 'Exam.html'}, {'title': 'Exam1', 'text': 'Exam1 (10%): 建立 Webots 基本物件模擬場景 \n 操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam1 - 學員學號 \n', 'tags': '', 'url': 'Exam1.html'}, {'title': 'Exam2', 'text': 'Exam2 (10%): 利用 CAD 零組件建立模擬場景 \n 操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam2 - 學員學號 \n', 'tags': '', 'url': 'Exam2.html'}, {'title': 'Exam3', 'text': 'Exam3 (20%): Webots 機電模擬場景的協同設計 \n 操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam3 - 學員學號 \n', 'tags': '', 'url': 'Exam3.html'}, {'title': 'Final', 'text': '期末協同專案執行過程影片、簡報與 PDf 報告檔案 (六人一組) (30%) \n 題目:  Webots 動態投籃模擬系統的協同設計 \n 說明:  \n 籃框架被配置在一定範圍內, 可隨機慢速前進、後退及左右擺動, 投籃機構系統帶有一定數量的籃球, 被配置在可自由移動的輪車上. \n 操作者可利用鍵盤特定按鍵控制投籃輪車的移動並發射投籃, 每投出一球後系統透過記分板進行計分, 並由送球機構進行補球或移動輪車取球, 遊戲可進行至全部數量籃球投完為止. \n 請將期末協同專案執行過程、內容與心得, 製作成影片，配合字幕上傳至 Youtube 後嵌入各階段的期末報告頁面中. \n 影片標題:  國立虎尾科技大學 - 機械設計工程系 - cd2025 期末報告 - 學員學號 - 各階段影片主題 \n', 'tags': '', 'url': 'Final.html'}, {'title': 'Brython', 'text': '1 add to 100 \n \n  導入 brython 程式庫  \n \n \n \n \n  啟動 Brython  \n \n \n \n  導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n \n \n \n  add 1 to 100 開始  \n \n \n  add 1 to 100 結束 \n  editor1 開始  \n  用來顯示程式碼的 editor 區域  \n \n \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor1 結束   ##########################################  \n 從 1 累加到 100 part2: \n 1 add to 100 cango_three_gears BSnake AI Tetris \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n  add 1 to 100 part2 開始  \n \n \n  add 1 to 100 part2 結束 \n  editor2 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor2 結束  \n \n \n', 'tags': '', 'url': 'Brython.html'}]};